<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[[CSS]-高度坍塌问题]]></title>
    <url>%2F2019%2F03%2F29%2FCSS-%E9%AB%98%E5%BA%A6%E5%9D%8D%E5%A1%8C%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[浮动塌陷如果父元素只包含浮动元素,且未设置高度,那么它的高度将坍塌为0.因为浮动元素脱离了文档流,包含他们的父块没有内容,发生塌陷. 解决方案 使用clear属性的空元素 1&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt; 使用css的overflow属性 给浮动元素的容器添加: 1overflow:hidden||auto; 给浮动元素的容器添加浮动 使用css的:after伪元素(推荐使用)123.cf:after &#123; clear: both;&#125;]]></content>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[ES6]-let&const]]></title>
    <url>%2F2019%2F03%2F29%2FES6-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[let let类似于var,但是声明的变量只在该代码块有效 不存在变量提升 暂时性死区 使用let声明变量之前,该变量不可使用 不允许重复声明 块级作用域 块级作用域的出现取代了立即执行函数. 1234567891011// IIFE 写法(function () &#123; var tmp = ...; ...&#125;());// 块级作用域写法&#123; let tmp = ...; ...&#125; 块级作用域可以多层嵌套 不建议在块级作用域声明函数,如果需要,也应该使用函数表达式 const const声明一个只读的常量,一旦声明,无法改变.因此声明的同时必须立即赋值. 存在暂时性死区 不可重复声明]]></content>
      <tags>
        <tag>JS</tag>
        <tag>ES6</tag>
      </tags>
  </entry>
</search>
