<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一蓑烟雨任平生.</title>
  
  <subtitle>stay hungry , stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-30T02:09:17.759Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>李瑞恒</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[CSS]-高度坍塌问题</title>
    <link href="http://yoursite.com/2019/03/29/CSS-%E9%AB%98%E5%BA%A6%E5%9D%8D%E5%A1%8C%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/03/29/CSS-高度坍塌问题/</id>
    <published>2019-03-29T11:44:01.000Z</published>
    <updated>2019-03-30T02:09:17.759Z</updated>
    
    <content type="html"><![CDATA[<h3 id="浮动塌陷"><a href="#浮动塌陷" class="headerlink" title="浮动塌陷"></a>浮动塌陷</h3><p>如果父元素只包含浮动元素,且未设置高度,那么它的高度将坍塌为0.因为浮动元素脱离了文档流,包含他们的父块没有内容,发生塌陷.</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ul><li><p>使用clear属性的空元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用css的overflow属性<br> 给浮动元素的容器添加: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">overflow:hidden||auto;</span><br></pre></td></tr></table></figure></li><li><p>给浮动元素的容器添加浮动</p></li></ul><ul><li>使用css的:after伪元素(推荐使用)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.cf:after &#123;</span><br><span class="line">    clear: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;浮动塌陷&quot;&gt;&lt;a href=&quot;#浮动塌陷&quot; class=&quot;headerlink&quot; title=&quot;浮动塌陷&quot;&gt;&lt;/a&gt;浮动塌陷&lt;/h3&gt;&lt;p&gt;如果父元素只包含浮动元素,且未设置高度,那么它的高度将坍塌为0.因为浮动元素脱离了文档流,包含他们的父块没有内容,发生塌陷.
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>[ES6]-let&amp;const</title>
    <link href="http://yoursite.com/2019/03/29/ES6-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2019/03/29/ES6-基础语法/</id>
    <published>2019-03-29T10:44:01.000Z</published>
    <updated>2019-03-29T11:48:15.909Z</updated>
    
    <content type="html"><![CDATA[<h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><ol><li>let类似于var,但是声明的变量只在该代码块有效</li></ol><ol start="2"><li><p>不存在变量提升</p></li><li><p>暂时性死区</p><blockquote><p>使用let声明变量之前,该变量不可使用</p></blockquote></li><li><p>不允许重复声明</p></li></ol><h3 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h3><ul><li><p>块级作用域的出现取代了立即执行函数.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// IIFE 写法</span><br><span class="line">(function () &#123;</span><br><span class="line">  var tmp = ...;</span><br><span class="line">  ...</span><br><span class="line">&#125;());</span><br><span class="line"></span><br><span class="line">// 块级作用域写法</span><br><span class="line">&#123;</span><br><span class="line">  let tmp = ...;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>块级作用域可以多层嵌套</p></li><li>不建议在块级作用域声明函数,如果需要,也应该使用函数表达式</li></ul><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><ol><li><p><code>const</code>声明一个只读的常量,一旦声明,无法改变.<br><br>因此声明的同时必须立即赋值.</p></li><li><p>存在暂时性死区</p></li><li><p>不可重复声明</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;let&quot;&gt;&lt;a href=&quot;#let&quot; class=&quot;headerlink&quot; title=&quot;let&quot;&gt;&lt;/a&gt;let&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;let类似于var,但是声明的变量只在该代码块有效&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;p&gt;不
      
    
    </summary>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
</feed>
