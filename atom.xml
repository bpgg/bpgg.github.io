<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一蓑烟雨任平生.</title>
  
  <subtitle>stay hungry , stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-23T09:00:14.267Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>李瑞恒</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[JS]-单线程及异步</title>
    <link href="http://yoursite.com/2019/04/23/js-%E5%8D%95%E7%BA%BF%E7%A8%8B%E5%8F%8A%E5%BC%82%E6%AD%A5/"/>
    <id>http://yoursite.com/2019/04/23/js-单线程及异步/</id>
    <published>2019-04-23T08:54:54.000Z</published>
    <updated>2019-04-23T09:00:14.267Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JS的主线程及执行栈"><a href="#JS的主线程及执行栈" class="headerlink" title="JS的主线程及执行栈"></a>JS的主线程及执行栈</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>JS是一门单线程语言，那为何能够实现异步操作呢？</p></blockquote><p>单线程和异步操作确实不能同时成为一个语言的特性。JS本身不能实现异步，但是JS的<strong>宿主环境</strong>（浏览器，Node）是多线程的，宿主环境通过某种方式，使得JS具备了异步的特性。</p><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><p>JS是单线程语言，浏览器只分配给JS一个主线程，用来执行任务（函数），但一次只能执行一个任务，这些任务形成一个任务队列排队等候执行，但前端的某些任务是非常耗时的，比如网络请求，定时器和事件监听，如果让他们和别的任务一样，都老老实实的排队等待执行的话，执行效率会非常的低，甚至导致页面的假死。</p><blockquote><p>浏览器为这些<strong>耗时任务</strong>开辟了另外的线程，主要包括<strong>http请求线程</strong>，<strong>浏览器定时触发器</strong>，<strong>浏览器事件触发线程</strong>，这些任务是异步的。</p></blockquote><h2 id="任务队列"><a href="#任务队列" class="headerlink" title="任务队列"></a>任务队列</h2><p>浏览器为这些异步任务单独开了一个线程，那么主线程是如何知道异步任务是否已经完成呢？这就需要依赖<strong>回调函数</strong>了，整个程序是靠事件驱动的，每个事件都有相应的回调函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'time up);</span></span><br><span class="line"><span class="string">&#125;,50)</span></span><br></pre></td></tr></table></figure><h2 id="主线程"><a href="#主线程" class="headerlink" title="主线程"></a>主线程</h2><blockquote><p>JS一直在做一个工作，就是从任务队列里提取任务，放到主线程里执行。</p></blockquote><p><img src="url" alt="event loop"></p><ul><li>浏览器为异步任务开启的线程序=&gt;WebAPIs</li><li>任务队列=&gt;callback queue</li><li>主线程<ul><li>堆和栈</li><li>函数的执行就是通过进栈和出栈实现</li><li>栈stack清空时，说明一个任务已经执行完成，这时会从<code>callback queue</code>中寻找下一个任务推入栈中</li></ul></li></ul><h2 id="容易困惑的问题"><a href="#容易困惑的问题" class="headerlink" title="容易困惑的问题"></a>容易困惑的问题</h2><h3 id="setTimeout-f1-0-是否立即执行"><a href="#setTimeout-f1-0-是否立即执行" class="headerlink" title="setTimeout(f1,0)是否立即执行"></a><code>setTimeout(f1,0)</code>是否立即执行</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// output =&gt; 2,1</span></span><br></pre></td></tr></table></figure><p>当执行setTimeout后，浏览器会立即把匿名函数放入<code>callback queue</code>中，等待主线程的召唤，因为此时的stack还有<code>console.log(2)</code>尚未执行。等<code>console.log(2)</code>执行完毕后，才通过<code>event loop</code>把匿名函数放到stack中执行。</p><ul><li><p>结论：</p><ul><li><code>setTimeout(f1,0)</code>并非无意义，若f1是比较耗时的任务，又不在WebAPIs中，那就可以把它放到<code>callback queue</code>，等待主线程执行完毕后再执行。</li><li>若当前代码执行时间很长，没有办法保证回调函数一定会在setTimeout指定的时间内完成。</li></ul></li><li><p>补充说明：</p><ul><li>HTML5标准规定了setTimeout()的第二个参数的最小值（最短间隔），不得低于4毫秒，如果低于这个值，就会自动增加。在此之前，老版本的浏览器都将最短间隔设为10毫秒。</li><li>DOM的变动（尤其是涉及页面重新渲染的部分），通常不会立即执行，而是每16毫秒执行一次。这时使用<code>requestAnimationFrame()</code>的效果要好于<code>setTimeout()</code></li></ul></li></ul><h2 id="浏览器异步机制的使用"><a href="#浏览器异步机制的使用" class="headerlink" title="浏览器异步机制的使用"></a>浏览器异步机制的使用</h2><ul><li>当我们自己需要写的程序中也有比较耗时的函数。可以通过浏览器提供给我们的<strong>浏览器定时事件</strong>和<strong>事件触发线程</strong>。</li></ul><h2 id="异步的好处和使用场景"><a href="#异步的好处和使用场景" class="headerlink" title="异步的好处和使用场景"></a>异步的好处和使用场景</h2><ul><li><p>异步的好处</p><ul><li>同步执行</li></ul><p><img src="url" alt="同步与异步的对比"></p><ul><li>异步执行</li></ul><p><img src="url" alt="同步与异步的对比"></p></li><li><p>使用场景</p></li></ul><p>程序需要大量I/O操作和用户请求时</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JS的主线程及执行栈&quot;&gt;&lt;a href=&quot;#JS的主线程及执行栈&quot; class=&quot;headerlink&quot; title=&quot;JS的主线程及执行栈&quot;&gt;&lt;/a&gt;JS的主线程及执行栈&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerli
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[webpack]-基础知识及配置</title>
    <link href="http://yoursite.com/2019/04/17/webpack-%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/04/17/webpack-基础/</id>
    <published>2019-04-17T08:48:59.000Z</published>
    <updated>2019-04-23T10:37:49.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="webpack-4-x的使用"><a href="#webpack-4-x的使用" class="headerlink" title="webpack 4.x的使用"></a>webpack 4.x的使用</h1><ul><li><p>需要安装</p><ul><li>webpack</li><li>webpack-cli</li></ul></li><li><p>基本使用</p></li></ul><blockquote><p>webpack a.js -o b.js</p></blockquote><h2 id="webpack-config-js"><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        port: <span class="number">3000</span>,</span><br><span class="line">        progress: <span class="literal">true</span>,</span><br><span class="line">        contentBase: <span class="string">'./dist'</span>, <span class="comment">//默认打开哪个目录</span></span><br><span class="line">        compress: <span class="literal">true</span></span><br><span class="line">        open:<span class="literal">true</span> </span><br><span class="line">    &#125;,</span><br><span class="line">    entry: path.join(__dirname, <span class="string">"./src/main.js"</span>),  </span><br><span class="line">    output: &#123;                                      </span><br><span class="line">        path: path.join(__dirname, <span class="string">"./dist"</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    mode: <span class="string">'development'</span>,   <span class="comment">// 'produciton'</span></span><br><span class="line"></span><br><span class="line">    plugins: [  <span class="comment">//放置所有插件</span></span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">            filename: <span class="string">'index.html'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="built_in">module</span>: &#123;   <span class="comment">//解析文件的loader，使用loader解析更高级的语法和其他语言特性</span></span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        presets: [</span><br><span class="line">                            <span class="string">'@babel/preset-env'</span></span><br><span class="line">                        ],</span><br><span class="line">                        plugins: [</span><br><span class="line">                            [<span class="string">"@babel/plugin-proposal-decorators"</span>, &#123; <span class="string">"legacy"</span>: <span class="literal">true</span> &#125;],</span><br><span class="line">                            [<span class="string">"@babel/plugin-proposal-class-properties"</span>, &#123; <span class="string">"loose"</span>: <span class="literal">true</span> &#125;],</span><br><span class="line">                            [<span class="string">"@babel/plugin-transform-runtime"</span>]</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,                  <span class="comment">//规定不解析该目录下的js文件</span></span><br><span class="line">                include: path.resolve(__dirname, <span class="string">'src'</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    <span class="string">'css-loader'</span>,</span><br><span class="line">                    <span class="comment">//'postcss-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    <span class="string">'css-loader'</span>,</span><br><span class="line">                    <span class="string">'less-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    optimization: &#123;</span><br><span class="line">        minimizer: [</span><br><span class="line">            <span class="keyword">new</span> OptimizeCss(),</span><br><span class="line">            <span class="keyword">new</span> UgliyfyJsPlugin(&#123;</span><br><span class="line">                cache: <span class="literal">true</span>,</span><br><span class="line">                parallel: <span class="literal">true</span>, <span class="comment">//并行压缩</span></span><br><span class="line">                sourceMap: <span class="literal">true</span> <span class="comment">//源码映射</span></span><br><span class="line">            &#125;)</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><ul><li>配置运行的脚本命令，使用<code>npm run dev</code>执行对应命令</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>:&#123;</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"webpack --config webpack.config.js"</span>,</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webpack中常用插件"><a href="#webpack中常用插件" class="headerlink" title="webpack中常用插件"></a>webpack中常用插件</h2><ul><li>打包html模板</li></ul><blockquote><p><code>html-webpack-plugin</code></p></blockquote><ul><li><p>解析文件的loader</p><ul><li>解析css,style,less等</li><li>给css增加浏览器的前缀 <code>postcss-loader</code>，需要配置<code>postcss.config.js</code></li><li>解析高级js语法的<code>babel-loader</code>，还需要<code>@babel/core</code>,<code>@babel/preset-env</code>等</li><li>代码校验： <code>eslint-loader</code></li><li>解析css中出现的url：<code>url-loader</code>，<code>file-loader</code></li></ul></li><li><p>压缩css文件</p></li></ul><blockquote><p><code>optimize-css-assets-webpack-plugin</code> 使用之后js便不会压缩，需要安装<code>uglifyjs-webpack-plugin</code></p></blockquote><ul><li><p>源码映射 <code>source-map</code></p></li><li><p>实时打包 <code>watch</code></p></li><li><p>其他插件</p><ul><li><code>clean-webpack-plugin</code> 每次build的时候，重置dist</li><li><code>copy-webpack-plugin</code>  复制一些其他类型的文件到dist，txt等</li><li><code>banner-plugin</code> 版权声明，再生成的js文件中添加自定义版权信息</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;webpack-4-x的使用&quot;&gt;&lt;a href=&quot;#webpack-4-x的使用&quot; class=&quot;headerlink&quot; title=&quot;webpack 4.x的使用&quot;&gt;&lt;/a&gt;webpack 4.x的使用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;需要安装&lt;/p&gt;
&lt;ul&gt;
      
    
    </summary>
    
    
      <category term="wenpack" scheme="http://yoursite.com/tags/wenpack/"/>
    
  </entry>
  
  <entry>
    <title>axios</title>
    <link href="http://yoursite.com/2019/04/10/vue-axios/"/>
    <id>http://yoursite.com/2019/04/10/vue-axios/</id>
    <published>2019-04-10T12:50:55.000Z</published>
    <updated>2019-04-10T12:50:55.387Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>同源策略,跨域解决</title>
    <link href="http://yoursite.com/2019/04/07/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/04/07/跨域问题/</id>
    <published>2019-04-07T08:49:38.000Z</published>
    <updated>2019-04-23T10:43:45.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浏览器同源策略-及跨域资源的解决方法"><a href="#浏览器同源策略-及跨域资源的解决方法" class="headerlink" title="浏览器同源策略,及跨域资源的解决方法"></a>浏览器同源策略,及跨域资源的解决方法</h1><h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h2><ul><li><p>源: 服务器</p></li><li><p>同源 =&gt; 域名,协议,端口 一致</p></li></ul><h2 id="同源策略分类"><a href="#同源策略分类" class="headerlink" title="同源策略分类"></a>同源策略分类</h2><ul><li><p>DOM同源策略: 禁止对不同源页面进行DOM操作</p></li><li><p>XMLHttpRequest同源策略 : 禁止xhr对象向不同源服务器发起http请求. </p></li></ul><h2 id="跨域的解决方法"><a href="#跨域的解决方法" class="headerlink" title="跨域的解决方法"></a>跨域的解决方法</h2><h3 id="CORS跨域"><a href="#CORS跨域" class="headerlink" title="CORS跨域"></a>CORS跨域</h3><ul><li>CORS [ Cross-origin resource sharing ], 定义在跨域时,浏览器和服务器应该如何沟通, 通过自定义的Http, 决定请求响应是否成功. 只要服务器实现CROS接口, 就可以跨域通信.</li></ul><h4 id="CORS分类"><a href="#CORS分类" class="headerlink" title="CORS分类"></a>CORS分类</h4><ul><li>简单请求<ul><li>请求方法:<ul><li>HEAD</li><li>GET</li><li>POST</li></ul></li><li>请求字段:<ol><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Last-Event-ID</li><li>Content-Type:  <code>application/x-www-form-urlencoded</code>, <code>multipart/form-data</code>, <code>text/plain</code></li></ol></li></ul></li><li>非简单请求</li></ul><h3 id="JSONP跨域"><a href="#JSONP跨域" class="headerlink" title="JSONP跨域"></a>JSONP跨域</h3><ul><li><p>因为浏览器的安全性限制, 不允许ajax进行跨域(不同域名/不同端口/不同协议…)访问</p></li><li><p>通过动态创建script标签, 实现跨域, src指向数据的接口地址=&gt;只支持get方法</p></li></ul><h4 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h4><ol><li><p>客户端定义回调方法, 预定义数据操作</p></li><li><p>将回调方法的名称, 以URL传参, 提交至服务器数据接口</p></li><li><p>服务器组装好要发送的数据, 结合客户端传来的方法名, 拼接成调用方法的字符串, 发送给客户端解析</p></li><li><p>客户端把收到的字符串以script脚本解析执行</p></li></ol><h3 id="其他跨域解决方法"><a href="#其他跨域解决方法" class="headerlink" title="其他跨域解决方法"></a>其他跨域解决方法</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;浏览器同源策略-及跨域资源的解决方法&quot;&gt;&lt;a href=&quot;#浏览器同源策略-及跨域资源的解决方法&quot; class=&quot;headerlink&quot; title=&quot;浏览器同源策略,及跨域资源的解决方法&quot;&gt;&lt;/a&gt;浏览器同源策略,及跨域资源的解决方法&lt;/h1&gt;&lt;h2 id=&quot;同
      
    
    </summary>
    
    
      <category term="Http" scheme="http://yoursite.com/tags/Http/"/>
    
  </entry>
  
  <entry>
    <title>VSCode中快速创建自定义模板</title>
    <link href="http://yoursite.com/2019/04/06/vscode-%E7%94%9F%E6%88%90%E6%A8%A1%E6%9D%BF/"/>
    <id>http://yoursite.com/2019/04/06/vscode-生成模板/</id>
    <published>2019-04-06T02:06:43.000Z</published>
    <updated>2019-04-23T10:35:33.237Z</updated>
    
    <content type="html"><![CDATA[<h3 id="以创建vue的html模板为例"><a href="#以创建vue的html模板为例" class="headerlink" title="以创建vue的html模板为例"></a>以创建vue的html模板为例</h3><blockquote><p>在html.json模板下编写</p></blockquote><ol><li><p>在VS Code 中找到设置 -&gt; 用户代码片段, 在输入框内输入 html, 选择html.json/html</p></li><li><p>编写自定义模板, 保存</p><ol><li>基本的html框架</li><li>script中vue的路径配置</li><li>基本的vue代码</li></ol></li></ol><blockquote><p><strong>模板如下</strong></p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">"Html5-Vue": &#123;</span><br><span class="line">"prefix": "vue",</span><br><span class="line">"body": [</span><br><span class="line">  "&lt;!DOCTYPE html&gt;",</span><br><span class="line">  "&lt;html lang=\"zh-CN\"&gt;\n",</span><br><span class="line">  "&lt;head&gt;",</span><br><span class="line">  "\t&lt;meta charset=\"UTF-8\"&gt;",</span><br><span class="line">  "\t&lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\"&gt;",</span><br><span class="line">  "\t&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;",</span><br><span class="line">  "\t&lt;title&gt;Document&lt;/title&gt;",</span><br><span class="line">  "\t&lt;script src=\"../lib/vue-2.6.10/vue.js\"&gt;&lt;/script&gt;",</span><br><span class="line">  "&lt;/head&gt;\n",</span><br><span class="line">  "&lt;body&gt;",</span><br><span class="line">  "\t&lt;div id=\"app\"&gt;$1&lt;/div&gt;\n",</span><br><span class="line">  "\t&lt;script&gt;",</span><br><span class="line">  "\t\tvar vm = new Vue(&#123;",</span><br><span class="line">  "\t\t\tel: '#app',",</span><br><span class="line">  "\t\t\tdata: &#123;&#125;,",</span><br><span class="line">  "\t\t\tmethods: &#123;&#125;",</span><br><span class="line">  "\t\t&#125;);",</span><br><span class="line">  "\t&lt;/script&gt;",</span><br><span class="line">  "&lt;/body&gt;\n",</span><br><span class="line">  <span class="string">"&lt;/html&gt;"</span></span><br><span class="line">],</span><br><span class="line">"description": "快速创建在html5编写的vue模板"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建一个html文件, 输入vue 回车生成自定义模板.</li></ol><h3 id="温馨提示"><a href="#温馨提示" class="headerlink" title="温馨提示"></a>温馨提示</h3><ul><li><p>“prefix” : 触发模板的关键字</p></li><li><p>模板都在”body”:[ ]中编写</p><ul><li>每行模板都用双引号</li><li>双引号中的双引号需要转义</li><li>$1 表示光标</li></ul></li><li><p>不能覆盖json文件自带的 { }</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;以创建vue的html模板为例&quot;&gt;&lt;a href=&quot;#以创建vue的html模板为例&quot; class=&quot;headerlink&quot; title=&quot;以创建vue的html模板为例&quot;&gt;&lt;/a&gt;以创建vue的html模板为例&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在html
      
    
    </summary>
    
    
      <category term="VSCode" scheme="http://yoursite.com/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>[HTML]-Label标签</title>
    <link href="http://yoursite.com/2019/04/02/html-label-for/"/>
    <id>http://yoursite.com/2019/04/02/html-label-for/</id>
    <published>2019-04-02T06:27:42.000Z</published>
    <updated>2019-04-23T09:02:54.336Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Label标签"><a href="#Label标签" class="headerlink" title="Label标签"></a>Label标签</h2><h3 id="for属性的介绍"><a href="#for属性的介绍" class="headerlink" title="for属性的介绍"></a>for属性的介绍</h3><ul><li><p>\<label>专为input元素服务, 为其定义标记</label></p></li><li><p>for属性规定label与哪个表单元素绑定</p></li></ul><h3 id="label和表单控件绑定方式"><a href="#label和表单控件绑定方式" class="headerlink" title="label和表单控件绑定方式"></a>label和表单控件绑定方式</h3><ul><li>隐式绑定 : 将表单控件作为label的内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>username:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">id</span>=<span class="string">'un'</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>显示绑定 :</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">'un'</span>&gt;</span>username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">id</span>=<span class="string">'un'</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="为啥要添加for属性呢"><a href="#为啥要添加for属性呢" class="headerlink" title="为啥要添加for属性呢?"></a>为啥要添加for属性呢?</h3><ul><li><p>提高鼠标用户的体验</p></li><li><p>在label元素内点击文本,会触发此控件.</p></li></ul><h3 id="Label-for的具体应用"><a href="#Label-for的具体应用" class="headerlink" title="Label-for的具体应用"></a>Label-for的具体应用</h3><blockquote><p>简单应用</p></blockquote> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>Male<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"male"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span>Female<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"female"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"jk"</span>&gt;</span>计科 : <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"major"</span> <span class="attr">id</span>=<span class="string">"jk"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"rg"</span>&gt;</span>软工 : <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"major"</span> <span class="attr">id</span>=<span class="string">"rg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>纯CSS实现幻灯片</p></blockquote><ul><li>CSS代码</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">     <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[name='pic']</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">999px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:checked+img</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>HTML代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">'pic'</span> <span class="attr">checked</span> <span class="attr">id</span>=<span class="string">'pic1'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./pic1.jpg"</span> <span class="attr">alt</span>=<span class="string">"pic1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">'pic'</span> <span class="attr">id</span>=<span class="string">'pic2'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./pic2.jpg"</span> <span class="attr">alt</span>=<span class="string">"pic2"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pic1"</span>&gt;</span>图片1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pic2"</span>&gt;</span>图片2<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Label标签&quot;&gt;&lt;a href=&quot;#Label标签&quot; class=&quot;headerlink&quot; title=&quot;Label标签&quot;&gt;&lt;/a&gt;Label标签&lt;/h2&gt;&lt;h3 id=&quot;for属性的介绍&quot;&gt;&lt;a href=&quot;#for属性的介绍&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>[PHP]-获取上传的文件并保存</title>
    <link href="http://yoursite.com/2019/04/02/php-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>http://yoursite.com/2019/04/02/php-文件上传/</id>
    <published>2019-04-02T05:27:46.000Z</published>
    <updated>2019-04-23T10:31:30.362Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前端代码界面"><a href="#前端代码界面" class="headerlink" title="前端代码界面"></a>前端代码界面</h3><ul><li><strong>注意:</strong> 上传文件格式: enctype=”multipart/form-data”</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload_file.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"file"</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"myFiles[]"</span> <span class="attr">id</span>=<span class="string">"file1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"myFiles[]"</span> <span class="attr">id</span>=<span class="string">"file2"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PHP服务器代码"><a href="#PHP服务器代码" class="headerlink" title="PHP服务器代码"></a>PHP服务器代码</h3><h4 id="修改文件名-便于整理"><a href="#修改文件名-便于整理" class="headerlink" title="修改文件名,便于整理"></a>修改文件名,便于整理</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取文件后缀</span></span><br><span class="line">$suffix =  substr($file_name,strrpos($file_name,<span class="string">'.'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.生成独一无二的时间+随机数并组合</span></span><br><span class="line">$newFileNme = date(<span class="string">'Ymdhis'</span>,time()).rand().$suffix;</span><br></pre></td></tr></table></figure><h4 id="上传多个文件时-存于数组-便于操作"><a href="#上传多个文件时-存于数组-便于操作" class="headerlink" title="上传多个文件时,存于数组,便于操作."></a>上传多个文件时,存于数组,便于操作.</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将获取的文件对象以数组形式保存</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reArrayFiles</span><span class="params">(&amp;$file_post)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    $file_ary = <span class="keyword">array</span>();</span><br><span class="line">    $file_count = count($file_post[<span class="string">'name'</span>]);</span><br><span class="line">    $file_keys = array_keys($file_post);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;$file_count; $i++) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($file_keys <span class="keyword">as</span> $key) &#123;</span><br><span class="line">            $file_ary[$i][$key] = $file_post[$key][$i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $file_ary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_FILES[<span class="string">'myFiles'</span>]) &#123;</span><br><span class="line">    $file_ary = reArrayFiles($_FILES[<span class="string">'myFiles'</span>]);</span><br><span class="line">     <span class="comment">//遍历获取的文件</span></span><br><span class="line">    <span class="keyword">foreach</span> ($file_ary <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'File Name: '</span> . $file[<span class="string">'name'</span>].<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'File Type: '</span> . $file[<span class="string">'type'</span>].<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'File Size: '</span> . $file[<span class="string">'size'</span>].<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'File Size: '</span> . $file[<span class="string">'tmp_name'</span>].<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//保存文件到指定的目录</span></span><br><span class="line">        <span class="comment">//1.如果不将临时文件保存,临时文件会自动删除</span></span><br><span class="line">        <span class="comment">//2.临时文件存放目录在php.ini中定义</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="string">"upload/"</span> . $file[<span class="string">'name'</span>]))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $file[<span class="string">'name'</span>] . <span class="string">" already exists. "</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            move_uploaded_file($file[<span class="string">'name'</span>],<span class="string">"upload/"</span> . $file[<span class="string">'tmp_name'</span>]);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Stored in: "</span> . <span class="string">"upload/"</span> .$file[<span class="string">'name'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前端代码界面&quot;&gt;&lt;a href=&quot;#前端代码界面&quot; class=&quot;headerlink&quot; title=&quot;前端代码界面&quot;&gt;&lt;/a&gt;前端代码界面&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; 上传文件格式: enctype=”multipart/
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>[DB]-数据库设计</title>
    <link href="http://yoursite.com/2019/04/01/mysql-%E5%88%9B%E5%BB%BA%E8%A1%A8/"/>
    <id>http://yoursite.com/2019/04/01/mysql-创建表/</id>
    <published>2019-04-01T09:55:32.000Z</published>
    <updated>2019-04-23T09:19:10.763Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库设计简介"><a href="#数据库设计简介" class="headerlink" title="数据库设计简介"></a>数据库设计简介</h2><ul><li><p><strong>六个阶段</strong></p><ul><li>系统需求分析</li><li>概念结构设计</li><li>逻辑结构设计</li><li>物理结构设计</li><li>数据库的实施</li><li>数据库的运行与维护</li></ul></li></ul><h2 id="系统需求分析"><a href="#系统需求分析" class="headerlink" title="系统需求分析"></a>系统需求分析</h2><h3 id="1-需求分析的任务"><a href="#1-需求分析的任务" class="headerlink" title="1.需求分析的任务"></a>1.需求分析的任务</h3><p>通过详细调查现实世界要处理的对象 (组织,部门,企业等), 充分了解原系统的工作概况(手工系统或计算机系统), 明确用户的各种需求, 然后在此基础上确定新系统的功能.</p><ul><li>调查重点<ul><li>信息要求, 用户需要获取的数据</li><li>处理要求, 用户要完成那些数据处理功能</li><li>安全性和完整性要求</li></ul></li></ul><h3 id="2-需求分析的方法"><a href="#2-需求分析的方法" class="headerlink" title="2.需求分析的方法"></a>2.需求分析的方法</h3><ul><li>跟班作业</li><li>询问</li><li>设计用户调查表</li><li>查阅记录, 查阅与原系统有关的数据记录</li></ul><h2 id="概念结构设计"><a href="#概念结构设计" class="headerlink" title="概念结构设计"></a>概念结构设计</h2><h3 id="1-概念结构设计简介"><a href="#1-概念结构设计简介" class="headerlink" title="1.概念结构设计简介"></a>1.概念结构设计简介</h3><blockquote><p>从需求分析中找到实体，确认实体的属性、确认实体的关系，画出ER图。</p></blockquote><h3 id="2-概念设计结构步骤"><a href="#2-概念设计结构步骤" class="headerlink" title="2.概念设计结构步骤"></a>2.概念设计结构步骤</h3><blockquote><p>需求分析数据–&gt;局部ER图–&gt;全局ER图</p></blockquote><ul><li>合并局部ER图的关键是消除冲突<ul><li>属性冲突</li><li>命名冲突</li><li>结构冲突</li></ul></li></ul><h2 id="逻辑结构设计"><a href="#逻辑结构设计" class="headerlink" title="逻辑结构设计"></a>逻辑结构设计</h2><h3 id="1-逻辑结构简介"><a href="#1-逻辑结构简介" class="headerlink" title="1.逻辑结构简介"></a>1.逻辑结构简介</h3><blockquote><p>目的是将E-R图中的实体、属性和联系转换成为关系模式。</p></blockquote><h3 id="2-初始关系模型设计"><a href="#2-初始关系模型设计" class="headerlink" title="2.初始关系模型设计"></a>2.初始关系模型设计</h3><h4 id="实体间关系转换的原则"><a href="#实体间关系转换的原则" class="headerlink" title="实体间关系转换的原则"></a>实体间关系转换的原则</h4><ul><li><p>一个实体转换为一个关系模式,实体的属性就是关系的属性,实体的键就是关系的键.</p></li><li><p>一个联系转为一个关系模式,与该联系相连的实体以及联系的属性都是该关系的属性.</p><ul><li>关系的键有三种情况:<ul><li>联系1:1,每个实体的键都是关系的候选键</li><li>联系1:n,则n端实体的键为关系的键</li><li>联系n:m,则各实体键的组合为关系的键</li></ul></li></ul></li><li>三个或三个实体的多元联系的码是各实体的码组成的关系码或者关系码的一部分</li><li>具有相同码的关系模式可以合并</li></ul><h4 id="实体间关系转换的规则"><a href="#实体间关系转换的规则" class="headerlink" title="实体间关系转换的规则"></a>实体间关系转换的规则</h4><ul><li>一个1:1的关系可以转换为一个独立的关系模式,也可以与任意一端对应关系模式合并.</li></ul><h3 id="3-关系模式规范化"><a href="#3-关系模式规范化" class="headerlink" title="3.关系模式规范化"></a>3.关系模式规范化</h3><h4 id="三大范式"><a href="#三大范式" class="headerlink" title="三大范式"></a>三大范式</h4><ul><li><p>1NF: 属性不可再分</p></li><li><p>2NF: 在1NF基础上, 每一个非主属性完全函数依赖于<strong>任何</strong>一个候选码<br><br>( 每个表只描述一件事,每条记录有唯一标识列 )</p></li><li><p>3NF: 在2NF基础上, 每一个非主属性既不<strong>传递依赖</strong>与码,也不<strong>部分依赖</strong>于码. <br><br>( 数据库表不包含已在其它表中存在的非主属性 )</p></li></ul><h2 id="物理结构设计"><a href="#物理结构设计" class="headerlink" title="物理结构设计"></a>物理结构设计</h2><h3 id="1-物理结构设计简介"><a href="#1-物理结构设计简介" class="headerlink" title="1.物理结构设计简介"></a>1.物理结构设计简介</h3><blockquote><p>给逻辑模型, 选取最合适应用环境的物理结构</p></blockquote><h3 id="2-确定物理结构"><a href="#2-确定物理结构" class="headerlink" title="2.确定物理结构"></a>2.确定物理结构</h3><h4 id="存储结构的设计"><a href="#存储结构的设计" class="headerlink" title="存储结构的设计"></a>存储结构的设计</h4><h4 id="数据存取路径的设计"><a href="#数据存取路径的设计" class="headerlink" title="数据存取路径的设计"></a>数据存取路径的设计</h4><h4 id="数据存放位置的设计"><a href="#数据存放位置的设计" class="headerlink" title="数据存放位置的设计"></a>数据存放位置的设计</h4><h4 id="系统配置的设计"><a href="#系统配置的设计" class="headerlink" title="系统配置的设计"></a>系统配置的设计</h4><h3 id="3-评价物理结构"><a href="#3-评价物理结构" class="headerlink" title="3.评价物理结构"></a>3.评价物理结构</h3><ul><li>定量估算各种方案的存储空间、存取时间和维护代价入手，对估算结果进行权衡、比较，选择出一个较优的合理的物理结构</li></ul><h2 id="数据库的实施"><a href="#数据库的实施" class="headerlink" title="数据库的实施"></a>数据库的实施</h2><h2 id="数据库的运行与维护"><a href="#数据库的运行与维护" class="headerlink" title="数据库的运行与维护"></a>数据库的运行与维护</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据库设计简介&quot;&gt;&lt;a href=&quot;#数据库设计简介&quot; class=&quot;headerlink&quot; title=&quot;数据库设计简介&quot;&gt;&lt;/a&gt;数据库设计简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;六个阶段&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统需求分析
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>[PHP]-namespace</title>
    <link href="http://yoursite.com/2019/03/31/php-%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/"/>
    <id>http://yoursite.com/2019/03/31/php-命名空间/</id>
    <published>2019-03-31T10:31:53.000Z</published>
    <updated>2019-04-23T10:30:40.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命名空间概述"><a href="#命名空间概述" class="headerlink" title="命名空间概述"></a>命名空间概述</h2><h3 id="什么是命名空间"><a href="#什么是命名空间" class="headerlink" title="什么是命名空间"></a>什么是命名空间</h3><ul><li>概念: 一种封装事物的方法.例如: 函数,类,方法</li><li>作用: 解决类名或者应用程序名冲突问题<ul><li>第三方类加载后可能与项目中的类名冲突.</li></ul></li><li>命名空间是虚拟空间,由 \ 分割空间路径</li></ul><h2 id="定义命名空间的要求"><a href="#定义命名空间的要求" class="headerlink" title="定义命名空间的要求"></a>定义命名空间的要求</h2><ul><li>namespace 空间名</li><li>所有代码均可存在, 仅有三种代码 类, 常量(const), 函数受空间影响</li><li>PHP脚本的第一行,不可有空格等(注释不算)</li></ul><h3 id="定义子命名空间"><a href="#定义子命名空间" class="headerlink" title="定义子命名空间"></a>定义子命名空间</h3><ul><li>举例: APP\Home\Controller</li><li>不建议一个文件有多个空间</li></ul><h4 id="简单组合法"><a href="#简单组合法" class="headerlink" title="简单组合法"></a>简单组合法</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">APP</span>\<span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $name = <span class="string">"李瑞恒"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"我的名字:&#123;$this-&gt;name&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">APP</span>\<span class="title">Home</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $name = <span class="string">"库里"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;我的名字:&#123;$this-&gt;name&#125;&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="大括号语法"><a href="#大括号语法" class="headerlink" title="大括号语法"></a>大括号语法</h4><ul><li>要加大括号,所有空间都必须加.</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">APP</span>\<span class="title">Home</span>\<span class="title">Controller</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Student</span>&#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">name</span> = "李瑞恒";</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"我的名字:&#123;$this-&gt;name&#125;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">APP</span>\<span class="title">Home</span>\<span class="title">Model</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Student</span>&#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">name</span> = "库里";</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;我的名字:&#123;$this-&gt;name&#125;&lt;br&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="不包含在命名空间中的代码"><a href="#不包含在命名空间中的代码" class="headerlink" title="不包含在命名空间中的代码"></a>不包含在命名空间中的代码</h4><blockquote><p>如何用大括号定义多个命名空间,且要实现全局代码不加到空间中?可以声明匿名空间!</p></blockquote><h5 id="声明匿名空间-全局空间-根空间"><a href="#声明匿名空间-全局空间-根空间" class="headerlink" title="声明匿名空间(全局空间,根空间)"></a>声明匿名空间(全局空间,根空间)</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Teacher</span>&#123;</span><br><span class="line">        <span class="title">public</span> <span class="title">function</span> <span class="title">__construct</span>($<span class="title">name</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title">echo</span> "&lt;<span class="title">br</span>&gt;我的名字:&#123;$<span class="title">name</span>&#125;&lt;<span class="title">br</span>&gt;";</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用命名空间"><a href="#使用命名空间" class="headerlink" title="使用命名空间"></a>使用命名空间</h2><ul><li>非限定访问(当前目录)</li><li>限定访问(相对路径)</li><li>完全限定访问(从根目录开始找)</li></ul><h2 id="namespace和NAMESPACE"><a href="#namespace和NAMESPACE" class="headerlink" title="namespace和NAMESPACE"></a>namespace和<strong>NAMESPACE</strong></h2><h3 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h3><ul><li>声明空间关键字</li><li>直接代替当前代码空间,相当于self关键字</li></ul><h3 id="NAMESPACE"><a href="#NAMESPACE" class="headerlink" title="__NAMESPACE__"></a>__NAMESPACE__</h3><ul><li>获取当前命名空间的字符串</li></ul><h2 id="命名空间的导入"><a href="#命名空间的导入" class="headerlink" title="命名空间的导入"></a>命名空间的导入</h2><ul><li>导入空间的类,常量函数不能导入</li><li>use App\Home\Controller\Student,默认类名为Student</li><li>use App\Home\Controller,默认空间别名为Controller</li><li>使用 as<ul><li>给空间起别名: use App\Home\Controller as Controller</li><li>给空间的类起别名: use App\Home\Controller\Student as Student2</li></ul></li></ul><h2 id="命名空间在项目中的使用"><a href="#命名空间在项目中的使用" class="headerlink" title="命名空间在项目中的使用"></a>命名空间在项目中的使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将带空间的类名转化为真实的类文件路径</span></span><br><span class="line"><span class="comment">//传递过来的类名: \Frame\Libs\Db</span></span><br><span class="line"><span class="comment">//类文件的真实路径: /Frame/Libs/Db.class.php</span></span><br><span class="line"></span><br><span class="line">$filename = <span class="string">"./"</span>.str_replace(<span class="string">'\\'</span>,<span class="string">'/'</span>,$className).<span class="string">".class.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果类文件存在,则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename))  <span class="keyword">require_once</span>($filename);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;命名空间概述&quot;&gt;&lt;a href=&quot;#命名空间概述&quot; class=&quot;headerlink&quot; title=&quot;命名空间概述&quot;&gt;&lt;/a&gt;命名空间概述&lt;/h2&gt;&lt;h3 id=&quot;什么是命名空间&quot;&gt;&lt;a href=&quot;#什么是命名空间&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>[Smarty]-简单用法</title>
    <link href="http://yoursite.com/2019/03/30/mvc-smarty/"/>
    <id>http://yoursite.com/2019/03/30/mvc-smarty/</id>
    <published>2019-03-30T09:37:59.000Z</published>
    <updated>2019-04-23T09:17:30.806Z</updated>
    
    <content type="html"><![CDATA[<p>如何分离代码?</p><ul><li>前端人员: {$name}</li><li>PHP只能解释的代码:</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $name<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>通过查找替换</li></ul><h3 id="常用PHP模板"><a href="#常用PHP模板" class="headerlink" title="常用PHP模板"></a>常用PHP模板</h3><p>smarty : PHP模板引擎的祖师,其他模板都是它的二次开发.</p><h3 id="smarty初始化"><a href="#smarty初始化" class="headerlink" title="smarty初始化"></a>smarty初始化</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.包含smarty类文件</span></span><br><span class="line">    <span class="keyword">require</span>(<span class="string">"../smarty-3.1.33/libs/Smarty.class.php"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.创建Smarty类对象</span></span><br><span class="line">    $smarty = <span class="keyword">new</span> Smarty();</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.Smarty配置</span></span><br><span class="line">    $smarty-&gt;left_delimiter=<span class="string">"&lt;&#123;"</span>;</span><br><span class="line">    $smarty-&gt;right_delimiter=<span class="string">"&#125;&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.向视图文件赋值</span></span><br><span class="line">    $smarty-&gt;assign(<span class="string">"name"</span>,<span class="string">"李白"</span>);</span><br><span class="line">    $smarty-&gt;assign(<span class="string">'age'</span>,<span class="number">22</span>);</span><br></pre></td></tr></table></figure><h3 id="smarty的配置"><a href="#smarty的配置" class="headerlink" title="smarty的配置"></a>smarty的配置</h3><ul><li><p>左右定界符</p><ul><li><code>$smarty-&gt;left_delimiter=&quot;&lt;{&quot;;</code></li><li><code>$smarty-&gt;right_delimiter=&quot;}&gt;&quot;;</code></li></ul></li><li><p>smarty常用目录配置</p><ul><li>设置或读取视图文件目录<ul><li>$smarty-&gt;setTemplateDir(“../App/Home/View”);</li><li>$smarty-&gt;getTemplateDir()</li></ul></li><li>其他目录的读取或设置</li></ul></li></ul><h3 id="smarty中的变量"><a href="#smarty中的变量" class="headerlink" title="smarty中的变量"></a>smarty中的变量</h3><h4 id="普通变量"><a href="#普通变量" class="headerlink" title="普通变量"></a>普通变量</h4><ul><li>所有的PHP变量都可传到视图文件</li><li>对象和资源变量不常用</li></ul><h4 id="保留变量"><a href="#保留变量" class="headerlink" title="保留变量"></a>保留变量</h4><blockquote><p>访问请求页面的变量<br></p></blockquote><ul><li>所有的超全局数组变量,可以在视图直接使用<ul><li>{$smarty.get.parm}</li><li>{$smarty.post.parm}</li><li>{$smarty.request.parm}</li><li>{$smarty.server.parm}</li><li>{$smarty.session.parm}</li><li>{$smarty.cookie.parm}</li><li>{$smarty.files.parm}</li></ul></li></ul><blockquote><p>时间戳</p></blockquote><ul><li><code>{$smarty.now|date_format:}</code></li></ul><blockquote><p>配置变量</p></blockquote><p>前端人员在.conf配置的变量,可以分组.</p><ul><li>.conf文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[cn]</span><br><span class="line">author = 李瑞恒</span><br><span class="line">sex = 男</span><br><span class="line">[en]</span><br><span class="line">author = henry</span><br><span class="line">sex = male</span><br></pre></td></tr></table></figure><ul><li>controller.php</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$smarty-&gt;setConfigDir(<span class="string">"../App/Conf"</span>);</span><br></pre></td></tr></table></figure><ul><li>view.html</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 加载配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">&#123;config_load</span> <span class="attr">file</span>=<span class="string">"myConfig.conf"</span><span class="attr">section</span>=<span class="string">$smarty.get.lan&#125;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 读取分组配置文件参数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">&#123;#author#&#125;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">&#123;$smarty.config.sex&#125;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="smarty中的循环-foreach"><a href="#smarty中的循环-foreach" class="headerlink" title="smarty中的循环-foreach"></a>smarty中的循环-foreach</h3><ul><li>foreach遍历一维数组</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">&#123;foreach</span> $<span class="attr">arr</span> <span class="attr">as</span> $<span class="attr">key</span>=&gt;</span>$value&#125;&gt;</span><br><span class="line">  <span class="comment">&lt;!-- 循环的内容   --&gt;</span></span><br><span class="line">  $arr[<span class="tag">&lt;<span class="name">&#123;$key&#125;</span>&gt;</span>] =<span class="tag">&lt;<span class="name">&#123;$value&#125;</span>&gt;</span>;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">&#123;</span>/<span class="attr">foreach</span>&#125;&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 描述性写法 --&gt;</span></span><br><span class="line">&#123;foreach from='' key='' item=''&#125;</span><br><span class="line"></span><br><span class="line">&#123;/foreach&#125;</span><br></pre></td></tr></table></figure><ul><li>foreach遍历二维数组</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">'300'</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">&#123;foreach</span> $<span class="attr">arrs</span> <span class="attr">as</span> $<span class="attr">arr</span>&#125;&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">&#123;foreach</span> $<span class="attr">arr</span> <span class="attr">as</span> $<span class="attr">value</span>&#125;&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">&#123;$value&#125;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">&#123;</span>/<span class="attr">foreach</span>&#125;&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">&#123;</span>/<span class="attr">foreach</span>&#125;&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>foreach的常用属性<ul><li><code>&lt;{$value}&gt;</code> 元素的值</li><li><code>&lt;{$value@key}&gt;</code> 元素下标</li><li><code>&lt;{$value@index}&gt;</code>  从0开始计数</li><li><code>&lt;{$value@iteration}&gt;</code>  从1开始计数</li><li><code>&lt;{$value@first}&gt;</code>  是否第1次循环</li><li><code>&lt;{$value@last}&gt;</code>   是否最后1次循环</li><li><code>&lt;{$value@total}&gt;</code>  循环总数</li></ul></li></ul><h3 id="smarty中的循环-section"><a href="#smarty中的循环-section" class="headerlink" title="smarty中的循环-section"></a>smarty中的循环-section</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;section name='' loop='' start='' step='' max=''&#125;</span><br><span class="line">&#123;/section&#125;</span><br><span class="line"><span class="comment">&lt;!-- 用法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">&#123;section</span> <span class="attr">name</span>=<span class="string">i</span> <span class="attr">loop</span>=<span class="string">$arr&#125;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">&#123;$arr[i]&#125;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">&#123;</span>/<span class="attr">section</span>&#125;&gt;</span></span><br></pre></td></tr></table></figure><ul><li>语法说明<ol><li>name:循环索引(必须)</li><li>loop:循环数组(必须)</li><li>start:初始索引</li><li>step:循环增长值</li><li>max:最大循环次数</li></ol></li></ul><h3 id="smarty中的判断语句-if语句"><a href="#smarty中的判断语句-if语句" class="headerlink" title="smarty中的判断语句-if语句"></a>smarty中的判断语句-if语句</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;if 条件1&#125;</span><br><span class="line">    //code</span><br><span class="line">&#123;elseif 条件2&#125;</span><br><span class="line">    //code</span><br><span class="line">&#123;else&#125;</span><br><span class="line">    //code</span><br><span class="line">&#123;/if&#125;</span><br></pre></td></tr></table></figure><h3 id="smarty中的变量调节器"><a href="#smarty中的变量调节器" class="headerlink" title="smarty中的变量调节器"></a>smarty中的变量调节器</h3><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;$var|调节器1:参数1:参数2:参数n|调节器2|...&#125;</span><br></pre></td></tr></table></figure><ul><li><p>语法说明</p><ul><li><code></code>$var` 要修饰的变量</li><li>|  分割调节器函数</li><li>:  分割调节器函数的参数</li></ul></li><li><p>PHP查找替换:str_replace(目标,结果,原始变量)</p><ul><li><code>{str_replace(&#39;Itcast&#39;,&#39;传智播客&#39;,$title)}</code></li></ul></li><li><p>smarty变量调节器替换</p><ul><li>{$title|replace:’Itcast’:’传智播客’}</li></ul></li></ul><h4 id="常用变量调节器"><a href="#常用变量调节器" class="headerlink" title="常用变量调节器"></a>常用变量调节器</h4><ul><li>date_format</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当前时间戳:<span class="tag">&lt;<span class="name">&#123;time()&#125;</span>&gt;</span></span><br><span class="line">当前时间戳:<span class="tag">&lt;<span class="name">&#123;$smarty.now&#125;</span>&gt;</span></span><br><span class="line">格式化时间戳:<span class="tag">&lt;<span class="name">&#123;date(</span> '<span class="attr">Y-m-d</span> <span class="attr">H:i:s</span>',<span class="attr">time</span>())&#125;&gt;</span></span><br><span class="line">格式化时间戳: <span class="tag">&lt;<span class="name">&#123;$smarty.now|date_format:</span> '%<span class="attr">Y-</span>%<span class="attr">m-</span>%<span class="attr">d</span> %<span class="attr">H:</span>%<span class="attr">M:</span>%<span class="attr">S</span>'&#125;&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如何分离代码?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前端人员: {$name}&lt;/li&gt;
&lt;li&gt;PHP只能解释的代码:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="SMARTY" scheme="http://yoursite.com/tags/SMARTY/"/>
    
  </entry>
  
  <entry>
    <title>[PHP]-PDO</title>
    <link href="http://yoursite.com/2019/03/30/php-pdo/"/>
    <id>http://yoursite.com/2019/03/30/php-pdo/</id>
    <published>2019-03-30T02:05:16.000Z</published>
    <updated>2019-04-23T10:29:22.841Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PDO简介"><a href="#PDO简介" class="headerlink" title="PDO简介"></a>PDO简介</h3><ul><li>PDO: php data object</li><li>主要功能: 代替数据库操作类<br></li></ul><h4 id="PDO连接mysql"><a href="#PDO连接mysql" class="headerlink" title="PDO连接mysql"></a>PDO连接mysql</h4><ul><li>语法:</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PDO::_construct(string $dsn[,string $username[,string $password]])</span><br><span class="line"></span><br><span class="line">$dsn = <span class="string">"mysql:host=127.0.0.1;port=3306;dbname=pdo_test"</span>;</span><br><span class="line">$username = <span class="string">'root'</span>;</span><br><span class="line">$password = <span class="string">"root"</span>;</span><br><span class="line"></span><br><span class="line">$pdo = <span class="keyword">new</span> PDO($dsn, $username, $password);</span><br></pre></td></tr></table></figure><ol><li><p>PDO常用方法</p><ol><li>exec() 执行一条sql语句,返回受影响的行数  </li><li>query() 执行select,show语句,并返回一个结果集对象(PDOStatement)</li><li>lastInsertId() 获取插入的记录的ID值</li><li>setAttribute() 设置属性<br><br> <code>语法:bool PDO::setAttribute(int $attribute,mixed $value)</code></li></ol></li><li><p>PDOStatement结果集对象常用方法:</p><ol><li>fetch() 获取结果集的一条记录,指针自动跳转<br><br><code>mixed  PDOStatement::fetch([int $fetch_style])</code>  </li><li>fetchAll() 获取结果集的多条记录</li><li>fetchColumn() 返回结果集的单独一列,默认为0</li><li>rowCount() 返回受上一个sql语句影响的行数</li><li><p>常用foreach遍历</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>($PDOStatement <span class="keyword">as</span> $arr)&#123;</span><br><span class="line">    print_r($arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h4 id="PDO错误处理模式"><a href="#PDO错误处理模式" class="headerlink" title="PDO错误处理模式"></a>PDO错误处理模式</h4><ul><li><p>错误处理概述</p><ul><li>静默模式:不显示任何错误(默认)</li><li>警告模式:用PHP的错误等级来报告信息</li><li>异常模式:先抛出异常,再处理异常</li></ul></li><li><p>静默模式<br>  获取错误信息函数<br></p><ol><li>PDO:errorCode(); 获取状态错误码.[00000]正常</li><li>PDO:errorInfo(); 获取错误信息</li></ol></li><li>警告模式<ul><li>必须先设置错误报告模式(在网页直接显示错误或者警告信息)<br><br>  <code>$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_WARNING);</code></li></ul></li><li>异常模式</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION);</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">//要执行的sql语句</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(PDOException $e)&#123;</span><br><span class="line">    ehco <span class="string">"错误行号:"</span>.$e-&gt;getLine();</span><br><span class="line">    ehco <span class="string">"&lt;br&gt;错误文件:"</span>.$e-&gt;getFile();</span><br><span class="line">    ehco <span class="string">"&lt;br&gt;错误状态码:"</span>.$e-&gt;getCode();</span><br><span class="line">    ehco <span class="string">"&lt;br&gt;错误信息:"</span>.$e-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PDO预处理模式"><a href="#PDO预处理模式" class="headerlink" title="PDO预处理模式"></a>PDO预处理模式</h4><ul><li>sql语句的执行(编译和执行)</li><li>如果是第一次执行,先编译后执行,切编译过程非常复杂</li><li>如果是第二次执行(相同sql语句),直接从缓存中读取,效率高,安全,有效防止sql语句注入.</li></ul><h5 id="预处理步骤"><a href="#预处理步骤" class="headerlink" title="预处理步骤"></a>预处理步骤</h5><ul><li>先提取相同结构语句</li><li>编译结构,保存结果</li><li>再将不同数据部分替换</li><li>执行预处理语句</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//(1)使用占位符":value"来代替真正的数据</span></span><br><span class="line"> $sql = <span class="string">"INSERT INTO user(username,password) VALUES(:username,:password)"</span>;</span><br><span class="line"> $sql = <span class="string">"INSERT INTO user(username,password) VALUES(?,?)"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//(2)预编译相同结构的sql语句,返回结果集对象</span></span><br><span class="line">$PDOStatement = $pdo-&gt;prepare($sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//(3)给占位符绑定真正的数据</span></span><br><span class="line">$PDOStatement-&gt;bindValue(<span class="string">":username"</span>,<span class="string">"henry"</span>);</span><br><span class="line">$PDOStatement-&gt;bindValue(<span class="string">":password"</span>,<span class="string">"566"</span>);</span><br><span class="line">$PDOStatement-&gt;bindValue(<span class="string">"1"</span>,<span class="string">"henry"</span>);</span><br><span class="line">$PDOStatement-&gt;bindValue(<span class="string">"2"</span>,<span class="string">"566"</span>);</span><br><span class="line"><span class="comment">//(4)执行预编译sql语句</span></span><br><span class="line">$PDOStatement-&gt;execute();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PDO简介&quot;&gt;&lt;a href=&quot;#PDO简介&quot; class=&quot;headerlink&quot; title=&quot;PDO简介&quot;&gt;&lt;/a&gt;PDO简介&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;PDO: php data object&lt;/li&gt;
&lt;li&gt;主要功能: 代替数据库操作类&lt;br&gt;&lt;/li
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>[CSS]-高度坍塌问题</title>
    <link href="http://yoursite.com/2019/03/29/CSS-%E9%AB%98%E5%BA%A6%E5%9D%8D%E5%A1%8C%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/03/29/CSS-高度坍塌问题/</id>
    <published>2019-03-29T11:44:01.000Z</published>
    <updated>2019-04-23T09:05:06.558Z</updated>
    
    <content type="html"><![CDATA[<h3 id="浮动塌陷"><a href="#浮动塌陷" class="headerlink" title="浮动塌陷"></a>浮动塌陷</h3><p>如果父元素只包含浮动元素,且未设置高度,那么它的高度将坍塌为0.因为浮动元素脱离了文档流,包含他们的父块没有内容,发生塌陷.</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ul><li>使用clear属性的空元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"clear:both"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用css的overflow属性<br>  给浮动元素的容器添加:</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">overflow:hidden||auto;</span><br></pre></td></tr></table></figure><ul><li><p>给浮动元素的容器添加浮动</p></li><li><p>使用css的:after伪元素(推荐使用)</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.cf:after &#123;</span><br><span class="line">    clear: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;浮动塌陷&quot;&gt;&lt;a href=&quot;#浮动塌陷&quot; class=&quot;headerlink&quot; title=&quot;浮动塌陷&quot;&gt;&lt;/a&gt;浮动塌陷&lt;/h3&gt;&lt;p&gt;如果父元素只包含浮动元素,且未设置高度,那么它的高度将坍塌为0.因为浮动元素脱离了文档流,包含他们的父块没有内容,发生塌陷.
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>[ES6]-let&amp;const</title>
    <link href="http://yoursite.com/2019/03/29/ES6-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2019/03/29/ES6-基础语法/</id>
    <published>2019-03-29T10:44:01.000Z</published>
    <updated>2019-04-23T09:03:46.694Z</updated>
    
    <content type="html"><![CDATA[<h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><ol><li><p>let类似于var,但是声明的变量只在该代码块有效</p></li><li><p>不存在变量提升</p></li><li><p>暂时性死区</p><blockquote><p>使用let声明变量之前,该变量不可使用</p></blockquote></li><li><p>不允许重复声明</p></li></ol><h3 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h3><ul><li>块级作用域的出现取代了立即执行函数.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IIFE 写法</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> tmp = ...;</span><br><span class="line">  ...</span><br><span class="line">&#125;());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 块级作用域写法</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">let</span> tmp = ...;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>块级作用域可以多层嵌套</li><li>不建议在块级作用域声明函数,如果需要,也应该使用函数表达式</li></ul><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><ol><li><p><code>const</code>声明一个只读的常量,一旦声明,无法改变.<br><br>因此声明的同时必须立即赋值.</p></li><li><p>存在暂时性死区</p></li><li><p>不可重复声明</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;let&quot;&gt;&lt;a href=&quot;#let&quot; class=&quot;headerlink&quot; title=&quot;let&quot;&gt;&lt;/a&gt;let&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;let类似于var,但是声明的变量只在该代码块有效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不存在变量提升&lt;/p&gt;
&lt;/
      
    
    </summary>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
</feed>
