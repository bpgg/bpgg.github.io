<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一蓑烟雨任平生.</title>
  
  <subtitle>stay hungry , stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-02T06:39:51.495Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>李瑞恒</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[HTML]-Label标签</title>
    <link href="http://yoursite.com/2019/04/02/label-for/"/>
    <id>http://yoursite.com/2019/04/02/label-for/</id>
    <published>2019-04-02T06:27:42.000Z</published>
    <updated>2019-04-02T06:39:51.495Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Label标签"><a href="#Label标签" class="headerlink" title="Label标签"></a>Label标签</h2><h3 id="for属性的介绍"><a href="#for属性的介绍" class="headerlink" title="for属性的介绍"></a>for属性的介绍</h3><ul><li><p>\&lt;label>专为input元素服务, 为其定义标记</p></li><li><p>for属性规定label与哪个表单元素绑定</p></li></ul><h3 id="label和表单控件绑定方式"><a href="#label和表单控件绑定方式" class="headerlink" title="label和表单控件绑定方式"></a>label和表单控件绑定方式</h3><ul><li>隐式绑定 : 将表单控件作为label的内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;label&gt;username:&lt;input type=&apos;text&apos; id=&apos;un&apos;&gt;&lt;/label&gt;</span><br></pre></td></tr></table></figure><ul><li>显示绑定 : </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;label for=&apos;un&apos;&gt;username:&lt;/label&gt;</span><br><span class="line">&lt;input type=&apos;text&apos; id=&apos;un&apos;&gt;</span><br></pre></td></tr></table></figure><h3 id="为啥要添加for属性呢"><a href="#为啥要添加for属性呢" class="headerlink" title="为啥要添加for属性呢?"></a>为啥要添加for属性呢?</h3><ul><li><p>提高鼠标用户的体验</p></li><li><p>在label元素内点击文本,会触发此控件.</p><h3 id="Label-for的具体应用"><a href="#Label-for的具体应用" class="headerlink" title="Label-for的具体应用"></a>Label-for的具体应用</h3><blockquote><p>简单应用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">    &lt;label for=&quot;male&quot;&gt;Male&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;male&quot; /&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    &lt;label for=&quot;female&quot;&gt;Female&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;female&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;form&gt;</span><br><span class="line">    &lt;label for=&quot;jk&quot;&gt;计科 : &lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; name=&quot;major&quot; id=&quot;jk&quot; /&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    &lt;label for=&quot;rg&quot;&gt;软工 : &lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; name=&quot;major&quot; id=&quot;rg&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>纯CSS实现幻灯片</p></blockquote></li></ul><ul><li><p>CSS代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">img &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 150px;</span><br><span class="line">     display: none;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">input[name=&apos;pic&apos;] &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: -999px;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">input:checked+img &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>HTML代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type=&quot;radio&quot; name=&apos;pic&apos; checked id=&apos;pic1&apos;&gt;</span><br><span class="line">    &lt;img src=&quot;./pic1.jpg&quot; alt=&quot;pic1&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;radio&quot; name=&apos;pic&apos; id=&apos;pic2&apos;&gt;</span><br><span class="line">    &lt;img src=&quot;./pic2.jpg&quot; alt=&quot;pic2&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;label for=&quot;pic1&quot;&gt;图片1&lt;/label&gt;</span><br><span class="line">        &lt;label for=&quot;pic2&quot;&gt;图片2&lt;/label&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Label标签&quot;&gt;&lt;a href=&quot;#Label标签&quot; class=&quot;headerlink&quot; title=&quot;Label标签&quot;&gt;&lt;/a&gt;Label标签&lt;/h2&gt;&lt;h3 id=&quot;for属性的介绍&quot;&gt;&lt;a href=&quot;#for属性的介绍&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>[PHP]-获取上传的文件并保存</title>
    <link href="http://yoursite.com/2019/04/02/php-file-upload/"/>
    <id>http://yoursite.com/2019/04/02/php-file-upload/</id>
    <published>2019-04-02T05:27:46.000Z</published>
    <updated>2019-04-02T05:41:44.306Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前端代码界面"><a href="#前端代码界面" class="headerlink" title="前端代码界面"></a>前端代码界面</h3><ul><li><strong>注意:</strong> 上传文件格式: enctype=”multipart/form-data”<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;upload_file.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">    &lt;label for=&quot;file&quot;&gt;Filename:&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;myFiles[]&quot; id=&quot;file1&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;myFiles[]&quot; id=&quot;file2&quot; /&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="PHP服务器代码"><a href="#PHP服务器代码" class="headerlink" title="PHP服务器代码"></a>PHP服务器代码</h3><h4 id="修改文件名-便于整理"><a href="#修改文件名-便于整理" class="headerlink" title="修改文件名,便于整理"></a>修改文件名,便于整理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//1.获取文件后缀</span><br><span class="line">$suffix =  substr($file_name,strrpos($file_name,&apos;.&apos;));</span><br><span class="line"></span><br><span class="line">//2.生成独一无二的时间+随机数并组合</span><br><span class="line">$newFileNme = date(&apos;Ymdhis&apos;,time()).rand().$suffix;</span><br></pre></td></tr></table></figure><h4 id="上传多个文件时-存于数组-便于操作"><a href="#上传多个文件时-存于数组-便于操作" class="headerlink" title="上传多个文件时,存于数组,便于操作."></a>上传多个文件时,存于数组,便于操作.</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">//将获取的文件对象以数组形式保存</span><br><span class="line">function reArrayFiles(&amp;$file_post) &#123;</span><br><span class="line"></span><br><span class="line">    $file_ary = array();</span><br><span class="line">    $file_count = count($file_post[&apos;name&apos;]);</span><br><span class="line">    $file_keys = array_keys($file_post);</span><br><span class="line"></span><br><span class="line">    for ($i=0; $i&lt;$file_count; $i++) &#123;</span><br><span class="line">        foreach ($file_keys as $key) &#123;</span><br><span class="line">            $file_ary[$i][$key] = $file_post[$key][$i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $file_ary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">if ($_FILES[&apos;myFiles&apos;]) &#123;</span><br><span class="line">    $file_ary = reArrayFiles($_FILES[&apos;myFiles&apos;]);</span><br><span class="line">     //遍历获取的文件</span><br><span class="line">    foreach ($file_ary as $file) &#123;</span><br><span class="line">        echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">        print &apos;File Name: &apos; . $file[&apos;name&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">        print &apos;File Type: &apos; . $file[&apos;type&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">        print &apos;File Size: &apos; . $file[&apos;size&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">        print &apos;File Size: &apos; . $file[&apos;tmp_name&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line"></span><br><span class="line">        //保存文件到指定的目录</span><br><span class="line">        //1.如果不将临时文件保存,临时文件会自动删除</span><br><span class="line">        //2.临时文件存放目录在php.ini中定义</span><br><span class="line"></span><br><span class="line">        if (file_exists(&quot;upload/&quot; . $file[&apos;name&apos;]))&#123;</span><br><span class="line">            echo $file[&apos;name&apos;] . &quot; already exists. &quot;;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            move_uploaded_file($file[&apos;name&apos;],&quot;upload/&quot; . $file[&apos;tmp_name&apos;]);</span><br><span class="line">            echo &quot;Stored in: &quot; . &quot;upload/&quot; .$file[&apos;name&apos;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前端代码界面&quot;&gt;&lt;a href=&quot;#前端代码界面&quot; class=&quot;headerlink&quot; title=&quot;前端代码界面&quot;&gt;&lt;/a&gt;前端代码界面&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; 上传文件格式: enctype=”multipart/
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>[DB]-数据库设计</title>
    <link href="http://yoursite.com/2019/04/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2019/04/01/数据库设计/</id>
    <published>2019-04-01T09:55:32.000Z</published>
    <updated>2019-04-01T09:58:36.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库设计简介"><a href="#数据库设计简介" class="headerlink" title="数据库设计简介"></a>数据库设计简介</h2><ul><li><p><strong>六个阶段</strong></p><ul><li>系统需求分析</li><li>概念结构设计</li><li>逻辑结构设计</li><li>物理结构设计</li><li>数据库的实施</li><li>数据库的运行与维护</li></ul></li></ul><h2 id="系统需求分析"><a href="#系统需求分析" class="headerlink" title="系统需求分析"></a>系统需求分析</h2><h3 id="1-需求分析的任务"><a href="#1-需求分析的任务" class="headerlink" title="1.需求分析的任务"></a>1.需求分析的任务</h3><p>通过详细调查现实世界要处理的对象 (组织,部门,企业等), 充分了解原系统的工作概况(手工系统或计算机系统), 明确用户的各种需求, 然后在此基础上确定新系统的功能.</p><ul><li>调查重点<ul><li>信息要求, 用户需要获取的数据</li><li>处理要求, 用户要完成那些数据处理功能</li><li>安全性和完整性要求</li></ul></li></ul><h3 id="2-需求分析的方法"><a href="#2-需求分析的方法" class="headerlink" title="2.需求分析的方法"></a>2.需求分析的方法</h3><ul><li>跟班作业</li><li>询问</li><li>设计用户调查表</li><li>查阅记录, 查阅与原系统有关的数据记录</li></ul><h2 id="概念结构设计"><a href="#概念结构设计" class="headerlink" title="概念结构设计"></a>概念结构设计</h2><h3 id="1-概念结构设计简介"><a href="#1-概念结构设计简介" class="headerlink" title="1.概念结构设计简介"></a>1.概念结构设计简介</h3><blockquote><p>从需求分析中找到实体，确认实体的属性、确认实体的关系，画出ER图。</p></blockquote><h3 id="2-概念设计结构步骤"><a href="#2-概念设计结构步骤" class="headerlink" title="2.概念设计结构步骤"></a>2.概念设计结构步骤</h3><blockquote><p>需求分析数据–&gt;局部ER图–&gt;全局ER图</p></blockquote><ul><li>合并局部ER图的关键是消除冲突<ul><li>属性冲突</li><li>命名冲突</li><li>结构冲突</li></ul></li></ul><h2 id="逻辑结构设计"><a href="#逻辑结构设计" class="headerlink" title="逻辑结构设计"></a>逻辑结构设计</h2><h3 id="1-逻辑结构简介"><a href="#1-逻辑结构简介" class="headerlink" title="1.逻辑结构简介"></a>1.逻辑结构简介</h3><blockquote><p>目的是将E-R图中的实体、属性和联系转换成为关系模式。</p></blockquote><h3 id="2-初始关系模型设计"><a href="#2-初始关系模型设计" class="headerlink" title="2.初始关系模型设计"></a>2.初始关系模型设计</h3><h4 id="实体间关系转换的原则"><a href="#实体间关系转换的原则" class="headerlink" title="实体间关系转换的原则"></a>实体间关系转换的原则</h4><ul><li><p>一个实体转换为一个关系模式,实体的属性就是关系的属性,实体的键就是关系的键.</p></li><li><p>一个联系转为一个关系模式,与该联系相连的实体以及联系的属性都是该关系的属性.</p><ul><li>关系的键有三种情况:<ul><li>联系1:1,每个实体的键都是关系的候选键</li><li>联系1:n,则n端实体的键为关系的键</li><li>联系n:m,则各实体键的组合为关系的键</li></ul></li></ul></li><li>三个或三个实体的多元联系的码是各实体的码组成的关系码或者关系码的一部分</li><li>具有相同码的关系模式可以合并</li></ul><h4 id="实体间关系转换的规则"><a href="#实体间关系转换的规则" class="headerlink" title="实体间关系转换的规则"></a>实体间关系转换的规则</h4><ul><li>一个1:1的关系可以转换为一个独立的关系模式,也可以与任意一端对应关系模式合并.</li></ul><h3 id="3-关系模式规范化"><a href="#3-关系模式规范化" class="headerlink" title="3.关系模式规范化"></a>3.关系模式规范化</h3><h4 id="三大范式"><a href="#三大范式" class="headerlink" title="三大范式"></a>三大范式</h4><ul><li>1NF: 属性不可再分</li></ul><ul><li><p>2NF: 在1NF基础上, 每一个非主属性完全函数依赖于<strong>任何</strong>一个候选码<br><br>( 每个表只描述一件事,每条记录有唯一标识列 )</p></li><li><p>3NF: 在2NF基础上, 每一个非主属性既不<strong>传递依赖</strong>与码,也不<strong>部分依赖</strong>于码. <br><br>( 数据库表不包含已在其它表中存在的非主属性 )</p></li></ul><h2 id="物理结构设计"><a href="#物理结构设计" class="headerlink" title="物理结构设计"></a>物理结构设计</h2><h3 id="1-物理结构设计简介"><a href="#1-物理结构设计简介" class="headerlink" title="1.物理结构设计简介"></a>1.物理结构设计简介</h3><blockquote><p>给逻辑模型, 选取最合适应用环境的物理结构</p></blockquote><h3 id="2-确定物理结构"><a href="#2-确定物理结构" class="headerlink" title="2.确定物理结构"></a>2.确定物理结构</h3><h4 id="存储结构的设计"><a href="#存储结构的设计" class="headerlink" title="存储结构的设计"></a>存储结构的设计</h4><h4 id="数据存取路径的设计"><a href="#数据存取路径的设计" class="headerlink" title="数据存取路径的设计"></a>数据存取路径的设计</h4><h4 id="数据存放位置的设计"><a href="#数据存放位置的设计" class="headerlink" title="数据存放位置的设计"></a>数据存放位置的设计</h4><h4 id="系统配置的设计"><a href="#系统配置的设计" class="headerlink" title="系统配置的设计"></a>系统配置的设计</h4><h3 id="3-评价物理结构"><a href="#3-评价物理结构" class="headerlink" title="3.评价物理结构"></a>3.评价物理结构</h3><ul><li>定量估算各种方案的存储空间、存取时间和维护代价入手，对估算结果进行权衡、比较，选择出一个较优的合理的物理结构</li></ul><h2 id="数据库的实施"><a href="#数据库的实施" class="headerlink" title="数据库的实施"></a>数据库的实施</h2><h2 id="数据库的运行与维护"><a href="#数据库的运行与维护" class="headerlink" title="数据库的运行与维护"></a>数据库的运行与维护</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据库设计简介&quot;&gt;&lt;a href=&quot;#数据库设计简介&quot; class=&quot;headerlink&quot; title=&quot;数据库设计简介&quot;&gt;&lt;/a&gt;数据库设计简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;六个阶段&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统需求分析
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>[PHP]-namespace</title>
    <link href="http://yoursite.com/2019/03/31/php-namespace/"/>
    <id>http://yoursite.com/2019/03/31/php-namespace/</id>
    <published>2019-03-31T10:31:53.000Z</published>
    <updated>2019-03-31T10:36:01.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命名空间概述"><a href="#命名空间概述" class="headerlink" title="命名空间概述"></a>命名空间概述</h2><h3 id="什么是命名空间"><a href="#什么是命名空间" class="headerlink" title="什么是命名空间"></a>什么是命名空间</h3><ul><li>概念: 一种封装事物的方法.例如: 函数,类,方法</li><li>作用: 解决类名或者应用程序名冲突问题<ul><li>第三方类加载后可能与项目中的类名冲突.</li></ul></li><li>命名空间是虚拟空间,由 \ 分割空间路径 </li></ul><h2 id="定义命名空间的要求"><a href="#定义命名空间的要求" class="headerlink" title="定义命名空间的要求"></a>定义命名空间的要求</h2><ul><li>namespace 空间名</li><li>所有代码均可存在, 仅有三种代码 类, 常量(const), 函数受空间影响</li><li>PHP脚本的第一行,不可有空格等(注释不算)</li></ul><h3 id="定义子命名空间"><a href="#定义子命名空间" class="headerlink" title="定义子命名空间"></a>定义子命名空间</h3><ul><li>举例: APP\Home\Controller</li><li>不建议一个文件有多个空间</li></ul><h4 id="简单组合法"><a href="#简单组合法" class="headerlink" title="简单组合法"></a>简单组合法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">namespace APP\Home\Controller;</span><br><span class="line"></span><br><span class="line">class Student&#123;</span><br><span class="line">    private $name = &quot;李瑞恒&quot;;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;我的名字:&#123;$this-&gt;name&#125;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace APP\Home\Model;</span><br><span class="line"></span><br><span class="line">class Student&#123;</span><br><span class="line">    private $name = &quot;库里&quot;;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;&lt;br&gt;我的名字:&#123;$this-&gt;name&#125;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="大括号语法"><a href="#大括号语法" class="headerlink" title="大括号语法"></a>大括号语法</h4><ul><li>要加大括号,所有空间都必须加.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">namespace APP\Home\Controller&#123;</span><br><span class="line">    class Student&#123;</span><br><span class="line">        private $name = &quot;李瑞恒&quot;;</span><br><span class="line">        public function __construct()</span><br><span class="line">        &#123;</span><br><span class="line">            echo &quot;我的名字:&#123;$this-&gt;name&#125;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">namespace APP\Home\Model&#123;</span><br><span class="line">    class Student&#123;</span><br><span class="line">        private $name = &quot;库里&quot;;</span><br><span class="line">        public function __construct()</span><br><span class="line">        &#123;</span><br><span class="line">            echo &quot;&lt;br&gt;我的名字:&#123;$this-&gt;name&#125;&lt;br&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="不包含在命名空间中的代码"><a href="#不包含在命名空间中的代码" class="headerlink" title="不包含在命名空间中的代码"></a>不包含在命名空间中的代码</h4><ul><li>如何用大括号定义多个命名空间,且要实现全局代码不加到空间中?可以声明匿名空间!</li></ul><h5 id="声明匿名空间-全局空间-根空间"><a href="#声明匿名空间-全局空间-根空间" class="headerlink" title="声明匿名空间(全局空间,根空间)"></a>声明匿名空间(全局空间,根空间)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">namespace&#123;</span><br><span class="line">    class Teacher&#123;</span><br><span class="line">        public function __construct($name)</span><br><span class="line">        &#123;</span><br><span class="line">            echo &quot;&lt;br&gt;我的名字:&#123;$name&#125;&lt;br&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用命名空间"><a href="#使用命名空间" class="headerlink" title="使用命名空间"></a>使用命名空间</h2><ul><li>非限定访问(当前目录)</li><li>限定访问(相对路径)</li><li>完全限定访问(从根目录开始找)</li></ul><h2 id="namespace和NAMESPACE"><a href="#namespace和NAMESPACE" class="headerlink" title="namespace和NAMESPACE"></a>namespace和<strong>NAMESPACE</strong></h2><h3 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h3><ul><li>声明空间关键字</li><li>直接代替当前代码空间,相当于self关键字</li></ul><h3 id="NAMESPACE"><a href="#NAMESPACE" class="headerlink" title="__NAMESPACE__"></a>__NAMESPACE__</h3><ul><li>获取当前命名空间的字符串</li></ul><h2 id="命名空间的导入"><a href="#命名空间的导入" class="headerlink" title="命名空间的导入"></a>命名空间的导入</h2><ul><li>导入空间的类,常量函数不能导入</li><li>use App\Home\Controller\Student,默认类名为Student</li><li>use App\Home\Controller,默认空间别名为Controller</li><li>使用 as<ul><li>给空间起别名: use App\Home\Controller as Controller</li><li>给空间的类起别名: use App\Home\Controller\Student as Student2</li></ul></li></ul><h2 id="命名空间在项目中的使用"><a href="#命名空间在项目中的使用" class="headerlink" title="命名空间在项目中的使用"></a>命名空间在项目中的使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//将带空间的类名转化为真实的类文件路径</span><br><span class="line">//传递过来的类名: \Frame\Libs\Db</span><br><span class="line">//类文件的真实路径: /Frame/Libs/Db.class.php</span><br><span class="line"></span><br><span class="line">$filename = &quot;./&quot;.str_replace(&apos;\\&apos;,&apos;/&apos;,$className).&quot;.class.php&quot;;</span><br><span class="line"></span><br><span class="line">//如果类文件存在,则包含</span><br><span class="line">if(file_exists($filename))  require_once($filename);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;命名空间概述&quot;&gt;&lt;a href=&quot;#命名空间概述&quot; class=&quot;headerlink&quot; title=&quot;命名空间概述&quot;&gt;&lt;/a&gt;命名空间概述&lt;/h2&gt;&lt;h3 id=&quot;什么是命名空间&quot;&gt;&lt;a href=&quot;#什么是命名空间&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>[Smarty]-简单用法</title>
    <link href="http://yoursite.com/2019/03/30/smarty/"/>
    <id>http://yoursite.com/2019/03/30/smarty/</id>
    <published>2019-03-30T09:37:59.000Z</published>
    <updated>2019-03-30T09:57:13.392Z</updated>
    
    <content type="html"><![CDATA[<p>如何分离代码?<br></p><ul><li>前端人员: {$name}</li><li>PHP只能解释的代码:&lt;?php echo $name?&gt; </li><li>通过查找替换</li></ul><h3 id="常用PHP模板"><a href="#常用PHP模板" class="headerlink" title="常用PHP模板"></a>常用PHP模板</h3><p>smarty : PHP模板引擎的祖师,其他模板都是它的二次开发.</p><h3 id="smarty初始化"><a href="#smarty初始化" class="headerlink" title="smarty初始化"></a>smarty初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//1.包含smarty类文件</span><br><span class="line">    require(&quot;../smarty-3.1.33/libs/Smarty.class.php&quot;);</span><br><span class="line"></span><br><span class="line">//2.创建Smarty类对象</span><br><span class="line">    $smarty = new Smarty();</span><br><span class="line"></span><br><span class="line">//3.Smarty配置</span><br><span class="line">    $smarty-&gt;left_delimiter=&quot;&lt;&#123;&quot;;</span><br><span class="line">    $smarty-&gt;right_delimiter=&quot;&#125;&gt;&quot;;</span><br><span class="line"></span><br><span class="line">//4.向视图文件赋值</span><br><span class="line">    $smarty-&gt;assign(&quot;name&quot;,&quot;李白&quot;);</span><br><span class="line">    $smarty-&gt;assign(&apos;age&apos;,22);</span><br></pre></td></tr></table></figure><h3 id="smarty的配置"><a href="#smarty的配置" class="headerlink" title="smarty的配置"></a>smarty的配置</h3><ol><li>左右定界符<ul><li>$smarty-&gt;left_delimiter=”&lt;{“;</li><li>$smarty-&gt;right_delimiter=”}&gt;”;</li></ul></li><li>smarty常用目录配置<ul><li>设置或读取视图文件目录<ul><li>$smarty-&gt;setTemplateDir(“../App/Home/View”);</li><li>$smarty-&gt;getTemplateDir()</li></ul></li><li>其他目录的读取或设置</li></ul></li></ol><h3 id="smarty中的变量"><a href="#smarty中的变量" class="headerlink" title="smarty中的变量"></a>smarty中的变量</h3><h4 id="普通变量"><a href="#普通变量" class="headerlink" title="普通变量"></a>普通变量</h4><ul><li>所有的PHP变量都可传到视图文件</li><li>对象和资源变量不常用</li></ul><h4 id="保留变量"><a href="#保留变量" class="headerlink" title="保留变量"></a>保留变量</h4><ol><li>访问请求页面的变量<br></li></ol><ul><li>所有的超全局数组变量,可以在视图直接使用<ul><li>{$smarty.get.parm}</li><li>{$smarty.post.parm}</li><li>{$smarty.request.parm}</li><li>{$smarty.server.parm}</li><li>{$smarty.session.parm}</li><li>{$smarty.cookie.parm}</li><li>{$smarty.files.parm}</li></ul></li></ul><ol start="2"><li>时间戳<ul><li>{$smarty.now|date_format:}</li></ul></li><li><p>配置变量<br>前端人员在.conf配置的变量,可以分组.</p><ul><li><p>.conf文件</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[cn]</span><br><span class="line">author = 李瑞恒</span><br><span class="line">sex = 男</span><br><span class="line">[en]</span><br><span class="line">author = henry</span><br><span class="line">sex = male</span><br></pre></td></tr></table></figure></li><li><p>controller.php</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$smarty-&gt;setConfigDir(&quot;../App/Conf&quot;);</span><br></pre></td></tr></table></figure></li><li><p>view.html</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 加载配置文件</span><br><span class="line">&lt;&#123;config_load file=&quot;myConfig.conf&quot; section=$smarty.get.lan&#125;&gt;</span><br><span class="line">//读取分组配置文件参数</span><br><span class="line"> &lt;&#123;#author#&#125;&gt;</span><br><span class="line"> &lt;&#123;$smarty.config.sex&#125;&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="smarty中的循环-foreach"><a href="#smarty中的循环-foreach" class="headerlink" title="smarty中的循环-foreach"></a>smarty中的循环-foreach</h3><ul><li><p>foreach遍历一维数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;&#123;foreach $arr as $key=&gt;$value&#125;&gt;</span><br><span class="line">  //循环的内容  </span><br><span class="line">  $arr[&lt;&#123;$key&#125;&gt;] =&lt;&#123;$value&#125;&gt;;&lt;br&gt;</span><br><span class="line">&lt;&#123;/foreach&#125;&gt;</span><br><span class="line">  //描述性写法</span><br><span class="line">&#123;foreach from=&apos;&apos; key=&apos;&apos; item=&apos;&apos;&#125;</span><br><span class="line"></span><br><span class="line">&#123;/foreach&#125;</span><br></pre></td></tr></table></figure></li><li><p>foreach遍历二维数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;table width=&apos;300&apos; border=&quot;1&quot;&gt;</span><br><span class="line">    &lt;&#123;foreach $arrs as $arr&#125;&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;&#123;foreach $arr as $value&#125;&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    &lt;&#123;$value&#125;&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;&#123;/foreach&#125;&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;&#123;/foreach&#125;&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></li><li><p>foreach的常用属性</p><ul><li>&lt;{$value}&gt; 元素的值</li><li>&lt;{$value@key}&gt; 元素下标</li><li>&lt;{$value@index}&gt;  从0开始计数</li><li>&lt;{$value@iteration}&gt;  从1开始计数</li><li>&lt;{$value@first}&gt;  是否第1次循环</li><li>&lt;{$value@last}&gt;   是否最后1次循环</li><li>&lt;{$value@total}&gt;  循环总数</li></ul></li></ul><h3 id="smarty中的循环-section"><a href="#smarty中的循环-section" class="headerlink" title="smarty中的循环-section"></a>smarty中的循环-section</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;section name=&apos;&apos; loop=&apos;&apos; start=&apos;&apos; step=&apos;&apos; max=&apos;&apos;&#125;</span><br><span class="line">&#123;/section&#125;</span><br><span class="line"></span><br><span class="line">//用法</span><br><span class="line">&lt;&#123;section name=i loop=$arr&#125;&gt;</span><br><span class="line">   &lt;&#123;$arr[i]&#125;&gt;</span><br><span class="line">&lt;&#123;/section&#125;&gt;</span><br></pre></td></tr></table></figure><ul><li>语法说明<ol><li>name:循环索引(必须)</li><li>loop:循环数组(必须)</li><li>start:初始索引</li><li>step:循环增长值</li><li>max:最大循环次数</li></ol></li></ul><h3 id="smarty中的判断语句-if语句"><a href="#smarty中的判断语句-if语句" class="headerlink" title="smarty中的判断语句-if语句"></a>smarty中的判断语句-if语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;if 条件1&#125;</span><br><span class="line">    //code</span><br><span class="line">&#123;elseif 条件2&#125;</span><br><span class="line">    //code</span><br><span class="line">&#123;else&#125;</span><br><span class="line">    //code</span><br><span class="line">&#123;/if&#125;</span><br></pre></td></tr></table></figure><h3 id="smarty中的变量调节器"><a href="#smarty中的变量调节器" class="headerlink" title="smarty中的变量调节器"></a>smarty中的变量调节器</h3><ul><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;$var|调节器1:参数1:参数2:参数n|调节器2|...&#125;</span><br></pre></td></tr></table></figure></li><li><p>语法说明</p><ul><li>$var 要修饰的变量</li><li>|  分割调节器函数</li><li>:  分割调节器函数的参数</li></ul></li></ul><ul><li>PHP查找替换:str_replace(目标,结果,原始变量)<ul><li>{str_replace(‘Itcast’,’传智播客’,$title)}</li></ul></li><li>smarty变量调节器替换<ul><li>{$title|replace:’Itcast’:’传智播客’}</li></ul></li></ul><h4 id="常用变量调节器"><a href="#常用变量调节器" class="headerlink" title="常用变量调节器"></a>常用变量调节器</h4><ul><li>date_format<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当前时间戳:&lt;&#123;time()&#125;&gt;</span><br><span class="line">当前时间戳:&lt;&#123;$smarty.now&#125;&gt;</span><br><span class="line">格式化时间戳:&lt;&#123;date( &apos;Y-m-d H:i:s&apos;,time())&#125;&gt;</span><br><span class="line">格式化时间戳: &lt;&#123;$smarty.now|date_format: &apos;%Y-%m-%d %H:%M:%S&apos;&#125;&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如何分离代码?&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前端人员: {$name}&lt;/li&gt;
&lt;li&gt;PHP只能解释的代码:&amp;lt;?php echo $name?&amp;gt; &lt;/li&gt;
&lt;li&gt;通过查找替换&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;常用PHP模板&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="SMARTY" scheme="http://yoursite.com/tags/SMARTY/"/>
    
  </entry>
  
  <entry>
    <title>[PHP]-PDO</title>
    <link href="http://yoursite.com/2019/03/30/pdo/"/>
    <id>http://yoursite.com/2019/03/30/pdo/</id>
    <published>2019-03-30T02:05:16.000Z</published>
    <updated>2019-03-30T05:18:21.626Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PDO简介"><a href="#PDO简介" class="headerlink" title="PDO简介"></a>PDO简介</h3><ul><li>PDO: php data object</li><li>主要功能: 代替数据库操作类<br></li></ul><h4 id="PDO连接mysql"><a href="#PDO连接mysql" class="headerlink" title="PDO连接mysql"></a>PDO连接mysql</h4><ul><li>语法: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PDO::_construct(string $dsn[,string $username[,string $password]])</span><br><span class="line"></span><br><span class="line">$dsn = &quot;mysql:host=127.0.0.1;port=3306;dbname=pdo_test&quot;;</span><br><span class="line">$username = &apos;root&apos;;</span><br><span class="line">$password = &quot;root&quot;;</span><br><span class="line"></span><br><span class="line">$pdo = new PDO($dsn, $username, $password);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>PDO常用方法</p><ol><li>exec() 执行一条sql语句,返回受影响的行数  </li><li>query() 执行select,show语句,并返回一个结果集对象(PDOStatement)</li><li>lastInsertId() 获取插入的记录的ID值</li><li>setAttribute() 设置属性<br><br> <code>语法:bool PDO::setAttribute(int $attribute,mixed $value)</code></li></ol></li><li><p>PDOStatement结果集对象常用方法:</p><ol><li><p>fetch() 获取结果集的一条记录,指针自动跳转<br><br> <code>mixed  PDOStatement::fetch([int $fetch_style])</code></p></li><li><p>fetchAll() 获取结果集的多条记录</p></li><li>fetchColumn() 返回结果集的单独一列,默认为0</li><li>rowCount() 返回受上一个sql语句影响的行数</li></ol><ul><li>常用foreach遍历  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foreach($PDOStatement as $arr)&#123;</span><br><span class="line">    print_r($arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="PDO错误处理模式"><a href="#PDO错误处理模式" class="headerlink" title="PDO错误处理模式:"></a>PDO错误处理模式:</h4><ul><li>错误处理概述<ul><li>静默模式:不显示任何错误(默认)</li><li>警告模式:用PHP的错误等级来报告信息</li><li>异常模式:先抛出异常,再处理异常</li></ul></li><li>静默模式<br>  获取错误信息函数<br><ol><li>PDO:errorCode(); 获取状态错误码.[00000]正常</li><li>PDO:errorInfo(); 获取错误信息</li></ol></li><li>警告模式<ul><li>必须先设置错误报告模式(在网页直接显示错误或者警告信息)<br><br>  <code>$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_WARNING);</code></li></ul></li><li>异常模式  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION);</span><br><span class="line">try&#123;</span><br><span class="line">    //要执行的sql语句</span><br><span class="line">&#125;catch(PDOException $e)&#123;</span><br><span class="line">    ehco &quot;错误行号:&quot;.$e-&gt;getLine();</span><br><span class="line">    ehco &quot;&lt;br&gt;错误文件:&quot;.$e-&gt;getFile();</span><br><span class="line">    ehco &quot;&lt;br&gt;错误状态码:&quot;.$e-&gt;getCode();</span><br><span class="line">    ehco &quot;&lt;br&gt;错误信息:&quot;.$e-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="PDO预处理模式"><a href="#PDO预处理模式" class="headerlink" title="PDO预处理模式"></a>PDO预处理模式</h4><ul><li>sql语句的执行(编译和执行)</li><li>如果是第一次执行,先编译后执行,切编译过程非常复杂</li><li>如果是第二次执行(相同sql语句),直接从缓存中读取,效率高,安全,有效防止sql语句注入.</li></ul><h5 id="预处理步骤"><a href="#预处理步骤" class="headerlink" title="预处理步骤"></a>预处理步骤</h5><ul><li>先提取相同结构语句</li><li>编译结构,保存结果</li><li>再将不同数据部分替换 </li><li>执行预处理语句</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//(1)使用占位符&quot;:value&quot;来代替真正的数据</span><br><span class="line"> $sql = &quot;INSERT INTO user(username,password) VALUES(:username,:password)&quot;;</span><br><span class="line"></span><br><span class="line"> $sql = &quot;INSERT INTO user(username,password) VALUES(?,?)&quot;;</span><br><span class="line"></span><br><span class="line">//(2)预编译相同结构的sql语句,返回结果集对象</span><br><span class="line">$PDOStatement = $pdo-&gt;prepare($sql);</span><br><span class="line"></span><br><span class="line">//(3)给占位符绑定真正的数据</span><br><span class="line">$PDOStatement-&gt;bindValue(&quot;:username&quot;,&quot;henry&quot;);</span><br><span class="line">$PDOStatement-&gt;bindValue(&quot;:password&quot;,&quot;566&quot;);</span><br><span class="line"></span><br><span class="line">$PDOStatement-&gt;bindValue(&quot;1&quot;,&quot;henry&quot;);</span><br><span class="line">$PDOStatement-&gt;bindValue(&quot;2&quot;,&quot;566&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//(4)执行预编译sql语句</span><br><span class="line">$PDOStatement-&gt;execute();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PDO简介&quot;&gt;&lt;a href=&quot;#PDO简介&quot; class=&quot;headerlink&quot; title=&quot;PDO简介&quot;&gt;&lt;/a&gt;PDO简介&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;PDO: php data object&lt;/li&gt;
&lt;li&gt;主要功能: 代替数据库操作类&lt;br&gt;&lt;/li
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>[CSS]-高度坍塌问题</title>
    <link href="http://yoursite.com/2019/03/29/CSS-%E9%AB%98%E5%BA%A6%E5%9D%8D%E5%A1%8C%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/03/29/CSS-高度坍塌问题/</id>
    <published>2019-03-29T11:44:01.000Z</published>
    <updated>2019-03-30T02:09:17.759Z</updated>
    
    <content type="html"><![CDATA[<h3 id="浮动塌陷"><a href="#浮动塌陷" class="headerlink" title="浮动塌陷"></a>浮动塌陷</h3><p>如果父元素只包含浮动元素,且未设置高度,那么它的高度将坍塌为0.因为浮动元素脱离了文档流,包含他们的父块没有内容,发生塌陷.</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ul><li><p>使用clear属性的空元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用css的overflow属性<br> 给浮动元素的容器添加: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">overflow:hidden||auto;</span><br></pre></td></tr></table></figure></li><li><p>给浮动元素的容器添加浮动</p></li></ul><ul><li>使用css的:after伪元素(推荐使用)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.cf:after &#123;</span><br><span class="line">    clear: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;浮动塌陷&quot;&gt;&lt;a href=&quot;#浮动塌陷&quot; class=&quot;headerlink&quot; title=&quot;浮动塌陷&quot;&gt;&lt;/a&gt;浮动塌陷&lt;/h3&gt;&lt;p&gt;如果父元素只包含浮动元素,且未设置高度,那么它的高度将坍塌为0.因为浮动元素脱离了文档流,包含他们的父块没有内容,发生塌陷.
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>[ES6]-let&amp;const</title>
    <link href="http://yoursite.com/2019/03/29/ES6-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2019/03/29/ES6-基础语法/</id>
    <published>2019-03-29T10:44:01.000Z</published>
    <updated>2019-03-29T11:48:15.909Z</updated>
    
    <content type="html"><![CDATA[<h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><ol><li>let类似于var,但是声明的变量只在该代码块有效</li></ol><ol start="2"><li><p>不存在变量提升</p></li><li><p>暂时性死区</p><blockquote><p>使用let声明变量之前,该变量不可使用</p></blockquote></li><li><p>不允许重复声明</p></li></ol><h3 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h3><ul><li><p>块级作用域的出现取代了立即执行函数.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// IIFE 写法</span><br><span class="line">(function () &#123;</span><br><span class="line">  var tmp = ...;</span><br><span class="line">  ...</span><br><span class="line">&#125;());</span><br><span class="line"></span><br><span class="line">// 块级作用域写法</span><br><span class="line">&#123;</span><br><span class="line">  let tmp = ...;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>块级作用域可以多层嵌套</p></li><li>不建议在块级作用域声明函数,如果需要,也应该使用函数表达式</li></ul><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><ol><li><p><code>const</code>声明一个只读的常量,一旦声明,无法改变.<br><br>因此声明的同时必须立即赋值.</p></li><li><p>存在暂时性死区</p></li><li><p>不可重复声明</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;let&quot;&gt;&lt;a href=&quot;#let&quot; class=&quot;headerlink&quot; title=&quot;let&quot;&gt;&lt;/a&gt;let&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;let类似于var,但是声明的变量只在该代码块有效&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;p&gt;不
      
    
    </summary>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
</feed>
